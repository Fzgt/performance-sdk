{"version":3,"sources":["../src/typings/types.ts","../src/data/constants.ts","../src/data/ReportData.ts","../src/config/index.ts","../src/helpers/getNetworkInformation.ts","../src/helpers/isLowEnd.ts","../src/helpers/getNavigatorInfo.ts","../src/helpers/onVisibilityChange.ts","../src/helpers/utils.ts","../src/helpers/vitalsScore.ts","../src/data/reportPerf.ts","../src/data/log.ts","../src/helpers/isSupported.ts","../src/performance/getNavigationTiming.ts","../src/data/metrics.ts","../src/performance/cumulativeLayoutShift.ts","../src/performance/observeInstances.ts","../src/performance/performanceObserver.ts","../src/performance/firstInput.ts","../src/performance/totalBlockingTime.ts","../src/performance/paint.ts","../src/performance/resourceTiming.ts","../src/performance/observe.ts","../src/tools/isSupported.ts","../src/error/index.ts","../src/data/analyticsTracker.ts","../src/data/reportData.ts","../src/data/storageEstimate.ts","../src/yideng.ts","performance/index.ts"],"names":[],"mappings":";;A6BAA;;;;A5BYO,AaVA,ALAP,ATqIA,A6BrIA,I5BUa,AaVA,AeAP,C5BUQ,GAAG,E4BVL,CfAQ,EeAL,C5BUR,AaV4B,EAA5B,CeAY,eAAJ,CAAW;A1BF1B,ADAA,AuBCA,AdDA,AeAA,AhBAA,AiBAA,AHAA,AlBAA,AFAA,ACAA,AOAA,ALAA,ACAA,ACGA,AMHA,AGAA,ALAA,ASAA,ANCA,AIAA,AHDA,AIAA,AFAA,AIAA,AvBwIA,A4BhIA,ACLE,EAAA,EJFI,AhBEA,ATqIM,QSrIE,GAAG,ATqIjB,A6BrIe,CpBAG,CoBAD,GJFK,AhBEL,CoBDS,CpBCF,CgBFC,GhBER,CAAjB,KgBFM,gBAAmB,CAAC,OAAD,EAA4C;AACnE,AxBWK,AaVA,ALCP,AoBAE,EAAA,E5BSW,AaVA,ALCP,CRSQ,EaVE,CbUC,A4BTT,C5BSU,CAAC,AaVA,AeCT,EpBAI,GAAG,CAAC,CRSX,GQTU,EAAO,IAAP,CAAjB;APHA,AuBEE,AdFF,AGGE,AYHF,AhBAA,AiBAA,AHAA,AlBAA,ADEO,AODP,ALAO,ACAA,ACGP,AMFA,AGFA,ALAA,ASAA,AFCA,AHDA,AIAA,AFEO,AIDP,AKOA,ACP0B,CAAX,CfEb,AeFF,ExBCa,AEDA,ACAA,ACGP,AUFO,GLCN,EAAE,ELCI,GFHU,ACAA,ACGP,CAAC,EFHS,ACAA,CCGV,EAAM,CJFQ,EIEd,CJFiB,AIEjC,CUFkC,CXDrB,EWCwB,KdAxB,GGDa,CAAC,AWCd,GXDa,EAAgB,QHCT,GAAc,KcAV,CACnC,kBADmC,EAE3B;AMJ2D,AxBa9D,AaXY,ATCjB,AEDA,ACAA,ACGF,AUAE,AnBkIF,A6BjIA,CfJO,AdqIP,COrIE,AYGA,ElBQW,AQRP,CRQQ,CwBTV,CIEG,C5BOU,A4BPT,CrBJC,CDAC,CPqIE,A6BjIZ,CtBJY,AEGE,AoBCF,GpBDK,CgBLoD,AxBa9D,AQRW,AoBClB,EAAkB,CJGZ,AjBPa,ACGF,CDHG,AWGA,CVAG,AUAF,CnBkIrB,CQrIuB,CAAC,ARqID,A6BjIvB,CpBDiB,CgBLoD,AhBKrE,CgBDI,AIGJ,CVFE,CAA2B,EXHT,CAAY,CAAZ,CAAD,CAAjB,EiBFmE,ENKvC,KAAD,EAAU;AhBHhC,AsBF8D,AdCrE,ADAA,AiBCA,AHAA,AlBDA,AFIO,ACDL,AEHwB,ACEzB,ACGD,ASLA,ALEA,ASFA,ANGO,AIFP,AHCA,AIFA,AFKI,AnBkIF,A4B/HF,CrBRO,ACAA,CRuIL,EGtIW,ACGF,AKCL,AOFO,ESCT,ArBAS,ACDP,GDCmC,CDHtB,EMIL,CNJuB,ACG9B,AJmIL,CAAA,CSlIe,CAAC,COFQ,EPET,COF4B,CSJwB,AhBM9C,COFhB,ESKD,AhBHW,CAAjB,ATkIE,CAAA,KyBxImE,CAKjE,CpBDa,CLoIf,CAAA,GAAA,CAAA,CAAA,GAAA,IyBxImE,IzBwInE,SKpI0B,CAA1B,EAA6B;AFD7B,AsBHmE,AxBc9D,AaTA,ATAH,AEAJ,AEGO,AUDH,AnBkIF,A6BjIF,E7BiIE,EC3HW,AaTA,ALGA,AoBAP,EJFF,AxBQW,CaTC,EbSG,A4BNR,CJR0D,AxBcjD,AaTD,CbSE,AITV,CwBGG,CJCR,AzBgIJ,CAAA,CKpIE,CwBGc,CAAC,CpBAQ,EgBR0C,AxBc9D,A4BNO,CJFV,AhBEoD,CoBAxD,GJRqE,AzByInE,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AGrIA,AsBJmE,AdG9D,AGGL,AJJF,AJEA,AFEO,ACAJ,AIGD,AMHK,AGJP,AIAA,AFCA,ACCO,AFIH,AnBkIH,A4BhID,C5B6HA,CGnIE,AWEA,ALGA,CJP6C,ALqInC,CWpIC,APGF,ACCT,AIEE,AMHS,AMFA,EIGT,ArBDS,AKGP,CKHC,CKEC,CLFC,AVAO,EOHI,CRCR,CgBIC,ChBJC,AQDS,APGhB,AKEiD,AUA1C,AnB+HS,IGnIL,AgBIV,CJFoB,GAAG,AMFA,CVDlB,AQKU,EEJW,CIJmC,GAS/D,ANDE,CRLe,CACrB,AIEW,EIEoB,CEJpB,EIJwD,CtBIvD,AsBGV,CtBHyB,AgBIS,CAAC,EnB+H3B,CWpIW,EAErB,EIC6B,CAAC,CIEC,ERLV,CQK4B,CRFjD,AUFgC,ArBmIX,CqBnIY,ErBmIZ,EyBvI8C,AzBuI9C,CAAvB,MmB/HuD,CJFxB,EAA4C,CJHpD,CQKnB,CRDM,CUHwB,AFI4B,EEJgB;AlBA/C,AsBJsC,AxBe9D,AUPL,AGHiB,ALKjB,AMHA,AEDK,AIDL,AFII,AUAN,CfJO,CHGL,AFEA,ENN6B,AFWlB,AgBTA,CRIR,CgBFD,AxBOW,AcRP,AEDO,CRIR,AoBDA,ClBDC,CVOU,AUPT,AMFS,CdFmB,AFWlB,CAAC,A4BNT,C1BL4B,A0BK3B,ClBDV,CAAY,CFA0C,AMDvC,AcEV,EJT8D,CVOjD,AEDP,EQGP,AdDJ,AMFgB,AYGE,CZFlB,ChBQK,AUPe,EVStB,C4BRO,EJT8D,CAQjE,AICwB,ClBD1B,CAA4B,AMFZ,EAEhB,AYCF,EZHkB,AYGgB,CAAE,CdFE,AEEN,CFFO,EUP8B,CdQtC,AIDX,EAAlB,CJC4B,AIF6C,CAEzE,CJAoC;ARJT,AsBM3B,AdDE,ADNJ,AFEO,ACML,ASNK,AIFP,AFCA,AHME,AIJA,AFIG,ASCL,EHDE,AhBCA,AYLA,ClBFY,CAFuB,AKGxB,AUAA,CTMR,AUNkC,CFKjC,AECF,CVAG,CEFC,CcCC,CAAC,GAAR,CAAY,CdDC,AHJS,ACGgC,GDH7B,EaCP,CIIlB,AdDmB,AUHA,CVGC,COJU,EPIX,CAAb,AOJ2B,CVAtB,CaCX,CAA2B,EVGE,IOJlB,GVAc,CGIvB,AHJwB,AaCE,EVGW,GHJd,AaCE,EbD+B,AaCrB,QHDJ,CACjC,kBADiC,EAE/B;AfFF,AsBMD,AdDK,AGFC,AaDA,AvBCA,ACAL,AGFA,ACMA,AMHA,AGDA,ALAK,AIGH,AIJA,AFKA,CMZJ,CtBKE,AMOA,EKJW,AaDA,AvBCA,ASAA,EFEP,ANFA,AGFA,AOGA,CDDU,CGGN,EHHS,ALIT,EEFE,AFEA,CEFC,AHJA,EOGE,CJCH,CAAN,CRLY,AKCZ,COGa,CZJC,AQKA,AFFoC,AMCpC,AEEE,GTLC,AKES,AIGP,EdTY,AwBKH,AvBCA,CSAC,CIGN,CUJQ,AvBCA,CWCR,CAAC,CPH5B,EHEe,AGFgB,EKEpB,EcDA,AvBCA,MOEkB,CIDzB,EEEmB,CAAwB,CFFD,CJCX,CAAC,GAAD,CAAjB,AEFe,CFE7B,EIDmD,AFDQ,AIGf,CUJb,AvBCA,AWCqB,CYFpB,CtBCV,CDAyC,ACAnE,EAA6B,AUC7B,EAA+D,CEEhB,EAAc,EUJ1B,EAAiC;AxBDpE,AQKG,AGFH,AJJF,AiBGE,AvBCA,ACAE,AGFA,ACMF,AMHE,AGDF,ALAA,ASLF,AFCO,AHOD,AIJF,AFKA,ASEJ,EzBTE,AWGA,ALIA,EPPI,AwBAA,ANDO,CXQR,CkBLG,AvBCF,AcAE,ALAF,AIGA,CHHC,ALIA,AIJA,CIGC,AIJA,CPCC,AGGA,EZHE,AGFA,GCC6C,CJCpD,AGFA,AUEa,EfHA,AYIT,CGDY,AEJO,AHOT,CdNC,AcMA,EGPW,ChBIR,AWClB,CMFW,ClBNsB,EwBMT,AZEX,GYDb,AVGK,CGPI,CHOL,CAAF,GbHJ,AWCwB,CAAC,AGDW,CdAZ,AcAa,EGDnC,CHCgB,CHChB,AMF6B,CHC/B,EEJ4B,CAAC,EOIT,EdApB,EAA+B,OcA7B,GAAiC,EPJP,EAA4C,OOIlB,CAAC,YAArD,GAAoE,EADtE;AxBDA,ADCA,ADUK,AUNJ,AGJgB,AYAjB,ACEA,AvBAE,ACAD,AOAI,AJFJ,ACMD,AMHC,AFDC,AOJF,AHOG,AIJC,AECC,CTFA,CLML,AWRA,CTEA,CVUW,AWRA,AWAA,CZHH,AMIe,CNEvB,AMFE,CADE,CbAI,AaIN,ChBIc,EQJP,AIJA,CZQU,CQJR,AIJT,EYEW,KEFL,AlBF8C,AWFpC,CnBYP,AmBZQ,ClBEP,AwBAA,AtBEU,EiBDV,CjBCc,CHQP,AWRc,AWAA,EHJjC,ClBEA,AwBAA,AdEoC,AQJT,AGIS,ErBFD,AwBAA,MCEnC,CfAW,AWAA,CIAgB,AvBAU,AgBJT,CCGxB,EAA0B,EDHH,EAAU,CCGjC,EjBCF,WQAkC,AWAA,GXAc,AWAA;ApBFlD,ADAmC,ADUhB,AyBVgB,ACGjC,AfAF,AHIA,AMHD,AGFC,ALCC,ASNH,AFEI,ACGC,AECH,AKMF,CbXO,CZEL,AMOA,CIP+D,CcG7D,AHPE,AXQJ,CJGG,CSLC,CTKC,CWRC,CjBCC,AwBGA,AfAA,AWAA,EpBHE,AwBGA,EPJE,CAAC,CXC0C,ASEtD,EAAe,CEHT,KAAe,GRIR,AWAA,CXAC,AWAA,CXAC,AWAA,OIAO,CPJpB,EAAkC,IRIlB,AWAA,IIAuB,CAAC,KAAjC,CADkB,KfCpB,AWAA,IXA+B,AWAA,CXAC,AWAA,CXAC,AWAA,cXAG,AWAA,GXApC,AWAA,IXA2C,AWAA,CXAC,AWAA,CXAC,AWAA,cXAG,AWAA,IXAvD,AWAA;ApBTmC,AQYnC,AGHK,AJHA,AiBIH,AHNF,ApBKE,ACAF,AOCD,ALFM,ACDL,ACOA,ASLE,ALEF,AOLI,AHOF,AEDA,AIFH,CpBVM,ASQA,AWAA,CdML,EKLW,AJHA,AiBIT,ApBFS,AUKT,IbJI,AeGE,CQFD,AtBDA,AGFA,CCOC,CkBJC,ClBIC,ECRW,ALGrB,ESAuB,AVAV,AaIC,CPPU,AOOT,EHJW,ANFT,CAAC,ACDoC,AUMlC,GZJU,AYIP,CKRvB,APSE,CTNqB,ASMA,CPPZ,AHEsB,AaFnB,EZCY,AWKE,CAAC,CRAlB,APHL,CgBHa,CZCW,AYDV,CZCW,EmBGT,ApBFX,CGFa,ANGQ,AIFN,CEA1B,AFAmC,AWKZ,GAAiB,CRAxC,AHL0B,AYDtB,CDMF,CRAsB,AGHnB,ANFoC,AYDV,ChBG7B,AIFwB,CAAT,CmBGwB,AvBDC,AIF1C,CmBG0C,APJtC,CVAoB,CCMxB,CDJA,CCIgC,CgBFvB,CAFkB,CjBFH,AHES,CAAU,CGC3C,CHDiC,EAAsB,QIIvD,KDNwB,EAGC;ARFvB,ADSiB,AUHpB,AeNG,AhBIF,AiBAE,AHPF,ApBMI,ACAL,AEDC,ACDD,ACOC,ASLE,ALEF,ASJF,AFDK,AHMsB,AIJvB,AOOJ,CjBfO,ANDA,AGGA,CCYL,EkBJE,ClBIC,AWVD,CbIE,AUIqB,CREpB,CYNC,EMEE,AVEqB,CGNpB,COIC,AVEqB,CbHpB,AiBDA,CAAC,CjBCR,AKJkD,AWCzC,IbEP,CaFY,CAAC,AHMI,EPFd,EHFT,AaFa,EbEC,ENOW,AoBPnB,CDFsB,CnBSD,CAAC,CoBPG,EXEjB,CiBAQ,ENFc,CAAC,KpBOlB,OmBTV,CCEP,CDFwC,CCEU,EMEV,CAAC,MAAjC,CAHiB,2C1BQiB,CAAzB;ACVgB,ADUhB,AUDrB,AGLO,AYJ8B,AhBMjC,AiBAA,ArBDG,AFAF,AGDD,ACAJ,ACME,ASLE,AEHE,AHKsC,AIHtC,AFGF,ClBGG,CQAL,CRCF,CaPa,AaET,ArBDS,ACDT,EOAW,APAT,AUGsC,CRGrC,CPRK,AwBAA,APKJ,CLH6C,ALM5C,CYNG,GMEC,CzBNwB,AwBAA,ATOe,CUDrC,CVCuC,CfL/B,AwBAA,AjBFiC,CYIpC,CDFV,CdGmB,AaET,CEHG,EfCS,AaET,CjBPc,AwBAA,ARKvB,AEHR,ADKF,CjBLQ,AwBAA,CLEgB,AFGF,CCLR,ACEW,InBJQ,AwBAA,CpBKxB,AcHU,CFGA,AEHC,CFGA,KSCG,GPJrB,ACEiB,GAAwB,GfCf,CYAlB,AGDR,EfC0B,CYAU,OSCK,CAAC,CTDG,CAAC,OSCrC,CAJc,CTGzB,EAA2D,WAA3D,EAAwE;AJA1E,AJEE,AiBAA,AHRA,AlBOF,ACDE,AEMF,ASLI,AIHN,AFAM,AHImB,AIFnB,AFGA,ASGN,EdNE,ALMA,EkBJE,ApBFA,CUEA,CXDE,AYAA,CJDC,CLMC,CKNC,AUNA,CfYC,IFNI,CAAC,EoBEE,CHRb,AfCoD,AYK/C,CMEU,ArBDjB,AaEQ,EKTW,AlBOX,CYAY,CMPlB,AjBMA,AcAE,CHCkB,AGDT,AFGT,EZHoB,AaFV,EDKG,CEHC,CAAC,SdAO,AaFR,CDKd,GQDyB,ANFzB,CDFA,CbEF,CaFuB,ECEY,GDFjC,KCEA,OME6C,CAAC,0BAAjC;AzBJf,AYGA,AYHA,AhBKA,AiBNyB,AHF1B,AlBOC,AFDA,AGAD,AEMD,ASP0E,ALE1E,AOHI,AHIF,AIFE,AFGD,EVGH,CkBVA,CbIE,AULF,CNIE,CLEI,CKLS,ALKR,CXJD,AwBAA,AhBMD,AQDH,EJFM,ALMA,AILE,CPAD,AWCA,CHFC,ALMA,CKPH,CZFL,AwBAA,ExBAY,AwBAA,CtBGZ,CiBAK,CjBAH,GAAG,CaEL,AIFE,CRCS,AQDA,KAAT,IAAkB,GjBAD,CAAC,CgBFJ,CVKF,AULZ,CPGM,CAAoB,AQD1B,EDFmB,IVKlB,GNHH,CMG0B,EGFlB,EAAkC,CAAlC,CAAV,CAP+D,CAQ/D,GHCuC,CAAC,OAAZ,CAAoB,CULtB,MVKE,IAA+B,AULpC,CVKnB,CULkC,GVMlC,CAAC,eAAO,gBAFV,EAGE,GUPmB,CAAnB;AlBAA,AYGF,AYHE,AhBQA,AiBHL,ArBDK,AFDF,ACDG,AECN,AEPuD,ASSpD,AILG,AFCD,AHIH,AIFE,AFGF,ASEH,CDbO,ApBGA,AEFA,EQEL,AELA,CLUE,ATDS,AiBFA,ALKT,EXDE,CQDC,EAAE,CAFA,CZDE,AwBAA,ATKA,CAAP,EAAU,GfLR,AwBAA,AtBGF,CECc,CFDZ,CFHc,AwBAA,ApBIA,EFDX,CAAC,CAAC,CCDuB,CHF5B,AwBAA,CJA8B,CjBEC,EiBFE,OjBE1B,CDCY,CAAC,AkBHb,MFCM,CAAb,CdGyB,AFD3B,CEAO,UDD0B,CACnC,EADmC,CiBFE,CjBIrC,EAFmC,AiBFa,EjBKrC;AHJR,AYGD,AYHC,AhBQA,AJJC,AFDF,ACEF,AiBLA,AFCG,AHID,AIFD,AFGF,CAjBM,CGWL,CDPA,CPUE,CZLA,AwBAA,AhBEY,CASZ,AJLE,GQDG,AQHA,CAAC,CpBAC,AYGA,AYHA,AtBGA,CUHF,CQAP,CAAY,GLKR,IAAF,CAAO,EKLT,ChBIuB,CgBJC,ChBIC,GgBJG,CAAC,GLK3B,EAAqB,CKLC,ALKtB,EKLF,ehBIoC,CAF3B;AJDL,ADMC,AaHH,AYHE,ApBIA,AFDA,ACEJ,AaDE,ALDF,ASHA,AFCC,AHIA,AIFF,AOID,CPjBO,EDEL,CnBcW,AaHT,ERCE,AFDA,ASAA,CCAC,ADAA,CAAL,CZGgB,AaHT,CAJA,ADIC,EXHE,ADMS,AyBNT,EtBGE,EFHE,AwBAA,AtBGA,KFHJ,ADMC,AyBND,CxBAU,AwBAA,ERIR,CZAW,CLEJ,CKDb,GFFsB,CAAC,EcCR,CAAC,AIJR,CAAd,CpBAU,AwBAA,CxBAN,AwBAA,EtBEK,AkBFU,GJIjB,EAA8B,EZCP,GYDvB,EAAqC,QZCjC,GACI,MgBNY,OAAH,ChBMN,CgBNkB,YhBMrB,CAAkB,QgBNT,CAAnB,ChBMU,GACE,YADF,GAEE,WAHN,GAII,aARD;AJAN,ADKgB,AaFjB,AYHC,ApBSC,AFNA,ACEJ,AIGK,ASJD,ALDF,ASHF,AFCD,CAXM,GNaH,ALKS,EHCP,AFNA,AcCA,GJDG,CTEC,CSFC,ADAA,CCLF,ATOP,CQFE,KJKuB,CLLR,CEMC,CFNC,AKKS,CHCR,AYLA,EAAE,MTIX,IaRG,ClBGmB,AkBHjC,ClBGkC,GkBHf,KbQS,CAC5B,ILRS,OEDA,AGQmB,EAE5B,KAF4B,EAGZ,GaXM,aAAH,EAAkB,+BAAlB,CAAnB;ApBCC,AYGC,AYHD,AhBOC,AJEE,AFNA,ACEF,AIMF,ASTuC,ALCtC,ASHD,ALIA,AWEF,IdHI,CIDA,CZOE,AFNA,AKQA,CAAC,ELRE,ACEA,AYDA,CHDC,CVAC,CUAC,CANH,AGOP,KZCE,CKEO,EDIU,CAAC,EHFE,CFNC,CEMC,AFNA,GAHf,IKWU,CejBA,AfiBnB,AaXc,CZOZ,AYPF,CZO0B,ADIQ,GaXf,wBhBS2B,KgBTxB,oBhBSE,EAA0B,IgBT/B,EAA+B,mBhBS1B,cgBTL,CAAnB,CAJgD,CAKhD;ArBGmB,AUCd,AGDH,AJIE,AcbF,AlBIO,AFKL,ACEA,AGNC,ACYH,ASPD,ADAF,CAfM,ECCH,ADeJ,CNDa,AGDT,ANJS,AUMX,CZPE,CISE,AcbF,ApBSE,GUAG,EAAE,ALQA,CKfF,ANGY,CGKC,AaVX,AnBWE,CmBXD,ApBSE,CIJU,ACYpB,CEPqB,ADGT,ANJA,CoBTZ,ApBSa,ACEX,CKEY,AcbF,ApBSE,MIJL,CGKA,AaVT,IdYwB,GNHI,AIJR,CJIS,AIJR,CPIE,AUCF,CACvB,AHNsB,CPIK,CAAC,AOJY,MGKjB,EAEvB,WVHmB,AUCI,EAGvB,gBAHuB,EAIf,qDVL2C,CAAhC;AAAA,AUMnB,AGLE,AJIE,AcbF,AlBeD,AFXQ,ACOL,AGNJ,ACYC,AITD,ASFA,CrBEK,GaCH,CVLA,COUI,ADDF,AcbF,AhBKE,AKGE,ASFF,IZOI,EAAJ,CcbK,CAAC,EdWgB,CcXxB,CVSc,AUTF,CXQK,CCCD,CQHP,CXQW,AENA,CAAC,CAAC,CFMC,MadvB,AhBK2B,MKG7B,ASFA,EAA6B,IdD7B,EAAgC,GGSI,QAAX,CAAzB;AGbO,AJaH,ANJH,AIJE,AKGH,ASFE,AFFG,GhBRL,CkBUE,AFFS,EVSP,AGLE,GTCC,CACL,CkBJO,CAAC,GAAR,CAAY,CdDD,AKGI,GAAG,CHKD,AGLE,CAAC,CHKD,MYPnB,CFFmC,GPIrC,AOJwC,CPTuB,CAc/D,CLJG,CAA8B,EEQI,AFRlC,EAAkC,CYD1B,CVS8B,EAHf,uBUNc,CACxC,kBADwC,EAEtC;ATQF,AGfmD,AJe/C,AcdF,AlBeF,AFJC,ACAC,AGNqC,ACYvC,ASPA,AIHE,AFAF,CNRK,EAYP,GHGM,ADAA,AFTmC,ACYnC,AWVE,GdQC,ADJA,ECIP,AGES,EJNP,AGN4C,EAAE,ACYnC,AWVE,GAAG,CIPd,GbcgB,IAAI,ADAA,AcdtB,EdcwB,CcdZ,AfiBa,CAAC,GaVvB,GpBHkB,AwBAA,ANGa,CAAC,EINjC,CJMc,CTOa,AFGJ,ASPd,CTOA,ASPb,AEHA,ClBH2C,AwBAA,AjBaF,AaVvC,CbUW,ASvBX,CTuBF,ASNA,AIJiB,EbU4B,CEHzC,CTVqD,AwBAA,GfUf,Cad5B,CtBIuD,AwBAA,CFFjE,SAFU,EAGV,EbWsD,CDJhC,GCIoC,AadhD,Cbcd,CaVI,CbU6D,IadnD,AFOZ,EEFE,KALU,EAMC;AtBDb,ASUA,AeVA,AhBUE,AcRA,AlBSL,ADJK,AGPiC,ACanC,AIRF,ASFC,ChBRI,IEKF,CEUC,EcRA,CXGG,CXLD,AwBAA,CjBaG,EJNE,EmBLA,CtBFC,AwBAA,AFEA,CdQG,ALHX,AIMF,EPba,AwBAA,AhBUE,AcRb,CAAY,ItBFI,AwBAA,MxBAlB,AwBAA,CxBDmE,AwBAA,CxBEnE,AwBAA,AFCE,EAA0B,cAA1B,IdQ4B,WAAf,EAA4B,IAA5B;ACCf,ADNwB,AcFtB,ApBIJ,ACCI,AGPH,ACaA,ASPD,ALDE,AOHF,AHEK,GTNL,CSMW,AWCQ,ClBDjB,CUFE,GhBIG,AINA,EJMP,CoBJU,CIMV,ERNA,CHEuB,CGFR,EHEW,EOFP,CNIT,EMJY,IAAI,APEf,COFgB,EIMa,CjBE3B,GOJC,GMJQ,CAAe,CNIrC,ADF0B,CAAC,CCEN,CPInB,EAAwB,EOJ1B,EDF0B,EAAkB,UNM1C,EAA0C,gBAA1C;ATTA,ASUD,AGLI,AYLH,AhBUD,AcRK,ApBIP,AING,AKKA,ASHF,AFAE,AHEF,AWGwC,CxBnBnC,EMKL,CIYW,ANLT,EAAE,ASIA,AWGQ,CdFE,GZLR,AYKW,AYLX,AFEA,GtBFJ,AwBAA,AEOsC,E1BP7B,AwBAA,ENEL,EIAS,EAAT,CJAJ,GAAY,KIDuB,IFCvB,AFAS,CEAvB,AFAwB,GHEN,CKFC,MFAL,CHEV,CAAJ,EGFsC,AHET,SGFkB,CAAC,QAA9C,CEAoB,cAAH,EAAmB,AMKA,EAAE,oCNLrB,CAAnB;ApBDI,ASUL,AGLC,AYLI,AhBUL,AcRO,AnBIJ,AGND,ACYD,ASPA,ALAE,AOHD,AHEC,CNJG,ADbA,CIkBL,EDAE,EKAE,CJAC,CZLD,AwBAA,CZKG,ATCA,AIMA,CeVD,GnBIJ,AQDS,CXLD,AwBAA,AjBYE,CIPC,CWHD,CtBFC,AwBAA,CFEP,AfUU,EPZZ,AwBAA,IFAiC,EXKb,GAAG,CAAC,CAAC,CJOC,CAAC,GQRf,ECCE,CAAd,ELHG,GJUuB,ASPN,ADDtB,CRQc,CAA4B,AQRlB,CRQV,CAAT,GAA0C,ASPlB,KDD7B,aRQK,GAA+D,MAAtE,KSP6C,CAAd,EAAiB,WAAxB,KAAwC,UAAhE,EAA4E;AhBJzE,AYGc,AYHd,AFEG,AnBIF,AGNL,ACYA,ASPG,ALAA,ASJF,AFCD,AHEE,AWCuC,CdFnC,ANTA,ACOA,AWNA,KEMD,CpBNiE,AwBAA,CxBMnE,AwBAA,EFCI,GnBIK,EmBJA,EAAL,AnBIF,IiBLO,CEF0B,cNMrB,AIJhB,CJIE,CIJ0B,CJIT,WAAjB;AMFI,AnBIF,AaDH,ALAC,ASJA,ITIA,MWHI,IXGM,CWHD,CXGG,CWHR,AXGS,CAAC,WAAF,GAAgB,CAAhB,ASJT,GTI6B,MSJhC,EAAc,GTI6B,GAAG,CAAC,CAAC,WAApC,GAAkD,CALzD,CSCL;AEHmC,AXQnC,ASJD,ALED,AWFQ,OAAA,CAAA,CJJc,APMf,CONH,CAFW,AIMH,CJER,MIFI,CAEgC,CACtC,qBXDmB,QAAd,CAAP;AfHE,AwBAA,ArBMA,AaDF,ALCE,ASJH,ALEA,CKhBM,ALWA,GJOH,MXNI,AwBAA,GbMK,EXNA,AwBAA,AbME,IXNE,AwBAA,GRKL,ILCc,GAAG,CAAC,CAAC,IKDf,GhBLa,AwBAA,ERK3B,EAAqB,CLNd,CXCL,AwBAA,ExBAiC,AwBAA,CRKnC;AhBJI,AwBAA,AFGA,AnBGA,AaDJ,ALCE,AONG,AQIH,IRJS,EQIH,EJDJ,ItBHI,AwBAA,AEIM,C1BJL,AwBAA,CxBAC,AwBAA,CFGC,AICM,CJDL,GAAR,CAAY,CJHY,CFKlB,AUDc,CAAC,CRJM,GlBAnB,AwBAA,EFGR,AICF,G1BJE,AwBAA,CNAO,ClBAQ,AwBAA,CRKL,KAAd,EAAqB,KAArB,EAvBE,CAwBF,AEN+B,CAAC,kBAAD,EAA4C;AlBCrE,AwBAA,ArBMF,AQAF,AONF,EAAA,EPME,MXNI,AwBAA,GrBMK,EHNA,AwBAA,CxBAC,AwBAA,AbME,EAAE,EONE,CAAC,ClBAR,AwBAA,ExBAS,AwBAA,INApB,CPM2B,AONA,CfMC,EQAE,IRAI,EAA9B,CeNwB,KAAD,CPHpB,COG8B;AlBAf,AwBAA,AFGlB,AnBTJ,AaYA,ALCE,AONA,AQGA,EVEF,IUFM,CAAC,CRHD,IlBDgB,AwBAA,ARMZ,CAAC,AELA,AQGT,CRHU,CQGG,C1BJW,AwBAA,ExBAJ,AwBAA,IxBAF,AwBAA,CFGT,CJFT,CFKc,CELQ,OIEpB,CAAkB,eAAlB,CAAkC,mBAAY,IAA9C,EAAoD,SAApD;AtBHwB,AwBAA,ArBQ7B,AaDG,ALCA,ASNG,AFAD,AQGA,CvBjBC,GQoBH,ASNS,MMGD,E1BLkB,AwBAA,EEKd,I1BLoB,AwBAA,CbQjB,AeHP,C1BL0B,AwBAA,CbQjB,GKDP,EhBPQ,AwBAA,ANEN,KAAK,CAAC,CEAoB,CTMR,ESNW,CJK3B,ALCmB,CAAC,CAAC,EONjC,CFKF,CEL6B,EEApB,GFAyB,CAAC,EPL9B,QOKH,eEAuC,GAAW,aMGrB,KAAK,CAA5B,0CAAN;A1BLwC,AwBAA,AFIxC,ANIH,ALCC,ASNF,AFAG,AQGA,GVAO,AUL8B,CAMtC,CVCC,CILC,GJGM,CAAV,CAzBE,ChBmB0C,AwBAA,ARS5C,GMLW,IAAP,EtBJiD,AwBAA,ExBAE,AwBAA,eJGrC,CAAd,CAAJ,EAAsB;ApBHF,AwBAA,AFKjB,AXKD,ASNA,AFAD,GAJD,CPUE,GWvBA,ItBaS,AwBAA,CxBAL,AwBAA,EbUM,EAAE,CAAC,CAAC,MSNJ,MTME,GAAiB,CAAC,CAAC,ESNjB,KAAd,QTMY,IAAsC,CAb7C;AXIF,AwBAA,AFKJ,ANID,ALCE,ASNA,AFAH,CANM,CFWL,IMHA,GtBRI,AwBAA,GRWM,CAAC,EhBTA,AwBAA,URSK,kBILD,CAAb;ApBHI,AwBAA,ARSJ,ALCA,ASND,AMEC,IfIA,EeJM,Q1BNE,AwBAA,GxBAG,AwBAA,AbUE,EAAE,AeJI,C1BNkB,AwBAA,AbUrB,CAAC,CeJK,E1BNmB,AwBAA,ARS/B,EUHgB,UfIX,CKDD,ChBTuB,AwBAA,CbUF,CXV/B,AwBAA,AbUgC,CAAC,CKDrC,GUHsB,CAAe,QVEvB,CAEd,GLfK;AXMD,AwBAA,AbUJ,AeJE,IAAA,M1BNE,AwBAA,AEMI,EAAN,C1BNK,AwBAA,CxBAC,AwBAA,IxBAJ,AwBAA,CxBAS,AwBAA,MxBAT,AwBAA,ExBAiB,AwBAA,MxBAjB,AwBAA,ExBAyB,AwBAA,IxBAzB,AwBAA,ExBFK,AwBAA,CxBGL,AwBAA;ARSJ,ALCA,ASPF,AMCuC,GAAf,CfMtB,AeNA,ENDE,KTOK,EAAE,CAAC,CAAC,OKDH,GLCC,GAAe,CAAC,CAAC,QSPV,CJMhB,AINE,CAAJ,CJM6B,CLClB,ASPW,ITOsB,CAjBrC,MKgByB,KAA9B;AhBRI,AwBAA,ARSL,ALCC,ASPA,AMGA,GVDQ,EAIP,GING,EpBHA,AwBAA,ARKI,CAAV,EhBLS,AwBAA,CxBAC,AwBAA,CJGG,EMGJ,UAAP,G1BNI,AwBAA,AEMgB,C1BNK,AwBAA,IFGP,QIGlB,CAVsC,C1BIlC,AwBAA,AEOJ,E1BPyC,AwBAA,AJGhB,CAAd,EAAiB,WAAxB,IpBHA,AwBAA,CJGwC,UAA5C,EAAwD;ApBFpD,AwBAA,AFGJ,ANMH,ALCG,ASPE,CJ9BC,GLqCH,MXVI,AwBAA,GxBAG,AwBAA,AbUE,CXVD,AwBAA,CbUG,CAAC,CAAC,CXVT,AwBAA,CxBAS,AwBAA,AFGX,ItBHE,AwBAA,ExBLK,AwBAA,CxBKW,AwBAA,IbUT,GAAkB,CAAC,CWP9B,AXO+B,CWN7B,EFDc,CAAd,EAAiB,EEAnB,EAEE,KXKS,ESPT,ETOgD,CWLtC,AXdP,CWcH,EAAuB;AACrB,AXKJ,ASPC,AMGD,OAAK,KJDG,CAAC,CAAC,GICV,GJDQ,AICU,KJDG,QICrB,CAZsC,CAatC,EJFI,EAAoB;AtBLpB,AwBAA,AFME,AXKN,IAAA,MXXI,AwBAA,AFME,CXKC,EXXA,AwBAA,AbWE,CXXD,AwBAA,AbWE,CAAC,EWLE,CAAC,EtBNV,AwBAA,CFME,CAAY,CtBND,AwBAA,OFMX,EAAsB,CtBND,AwBAA,AFME,CtBNZ,AwBAA,AFMa,EtBNF,AwBAA,GbWnB,CWLH,EXKgC,CAAC,CAAC,eAA/B,IAAkD,CArBtD;AXWC,AwBAA,AFMD,AXKL,ASRA,AMIA,MAAM,iBAAiB,CNJb,EMIgB,OAAO,CAAC,GNJpB,KAAd,QMIA;A1BNM,AwBAA,AFMH,AXKH,ASRA,ITQA,GWXA,EAOE,GXIM,CWXR,CXWU,CAAC,CAAC,YAAF,GAAiB,CAAC,CAAC,USRhB,CAAb,ITQU,IAAsC,CAvB3C;AXaC,AwBAA,AFQP,AXGC,ASRD,AMGC,MJGF,AIHM,iBAAJ,EAAuB;A1BLjB,AwBAA,AbWN,AeLE,IfKF,YAAY,EAAE,CAAC,AeLN,CfKO,WAAF,GAAgB,CAAC,AeL7B,CfK8B,EeLJ,YfKd,IAAoC,CeLhD;A1BLI,AwBAA,AbfD,ASiBP,AMIG,GfrBH,AemBE,GNFE,GMIK,G1BND,AwBAA,GxBAG,AwBAA,GxBAG,AwBAA,IxBAN,AwBAA,gBJEU,CAAd,CAAJ,EAAsB;ApBDf,AwBAA,AbWR,ASTG,AMIE,CfrCC,UXyBC,AwBAA,QEYK,KNJC,WMIR,ENJY,CMIc,INJ5B,sBMIE;A1BLC,AwBAA,AJEH,AMIC,mCJAiB,QFJL,CAAb;ApBDC,AwBAA,AFMD,AFJD,OpBnBC,AwBAA,MxBiBO,AwBAA,IxBAI,AwBAA,EFMT,GtBNc,AwBAA,IxBAI,AwBAA,SFMpB,CAAmB,StBNa,AwBAA,IxBAzB,AwBAA,ExBA+B,AwBAA,KFMtC,EAAyC,UAAU,CAAV,EAAW;AtBLlD,AwBAA,AFMA,AFJL,AMGG,CNnBG,OEoBD,CAAC,CAAC,EtBNE,AwBAA,CxBAC,AwBAA,CxBAC,AwBAA,GEKD,OJCL,ItBNS,AwBAA,KEKX,GAA0B,CAAC,C1BLzB,AwBAA,AEK0B,E1BLL,AwBAA,KEKY,CAAC,cAApC;A1BJI,AwBAA,AFMF,AIDF,QJCE,EtBNE,AwBAA,KFMK,CAAC,CIDH,E1BLM,AwBAA,AFMX,CtBNY,AwBAA,AFMA,UtBNV,AwBAA,CxBAqB,AwBAA,CEKzB,GAAyB,CAAC,C1BLtB,AwBAA,AEKuB,CJCzB,CtBN+B,AwBAA,CFMC,CAAC,CAAC,CtBNhC,AwBAA,CEK8B,CAAC,GJCjC,UIDF;A1BJG,AwBAA,AFMD,AIDF,S1BPE,AwBAA,MxBEO,AwBAA,AFMA,EIDF,EJCL,KIDF,GAAiB,OAAO,CAAC,cAAR,IAA0B,eAAO,OAAlD;A1BJI,AwBAA,AFMH,OAJD,OtBFQ,AwBAA,GxBAG,AwBAA,GxBA4B,AwBAA,IxBAI,AwBAA,KxBAJ,AwBAA,ExBAnC,AwBAA;AxBCA,AwBAA,AFML,AIDC,MAAI,I1BLA,AwBAA,GxBAG,AwBAA,AEKI,C1BLH,AwBAA,AEKI,G1BLR,AwBAA,SEKJ,EAA0B,E1BLT,AwBAA,MxBAb,AwBAA,mBxBA4B,AwBAA,IxBA5B,AwBAA;AEMF;A1BLE,AwBAA,AEMF,QAAM,E1BNJ,AwBAA,GxBAG,AwBAA,CxBAC,AwBAA,IEMU,E1BNd,AwBAA,CEMiB,E1BNJ,AwBAA,EEMQ,U1BNR,AwBAA,IEMI,EAAnB;A1BLI,AwBAA,AEMJ,IAAA,UAAU,CAAC,GAAX,gBJDe;AtBJX,AwBAA,AFKN,AICC,GA5BqC,CA8BtC,MJHM,EtBLA,AwBAA,GxBAG,AwBAA,CFKG,EtBLA,AwBAA,CFKG,GtBLT,AwBAA,UFKW,MAAjB;AtBJK,AwBAA,WxBHD,AwBAA;AxBID,AwBAA,AFIH,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AtBHvC,AwBAA,AFIC,AIEF,MAAI,CAAC,CJFH,MAAM,CAAC,CAAD,CAAN,CAAU,gBAAV,CACE,OADF,EAEE,KIAJ,EAA+B,GJA1B,CAAD,EAAM;AtBLX,AwBAA,AFMO,AIAJ,UJAI,OAAO,CAAC,GAAR,CAAY,kBAAZ;AACA,AIAL,GAjCqC,CAkCtC,MJDM,OAAO,CAAC,GAAR,CAAY,CAAZ;AACD,SALH,EAME,IANF;AASA,QAAA,MAAM,CAAC,CAAD,CAAN,CAAU,gBAAV,CACE,oBADF,EAEE,UAAU,CAAV,EAAW;AACT,AINN,MAAI,IJME,OAAO,CAAC,GAAR,CAAY,SINW,WJMvB,CINN,EAAgC;AJO3B,AINH,SJEA,EAKE,IALF;AAOD,AIRA,GArCqC,CAsCtC,W1BVW,AwBAA;AFkBZ,MACD;AACA;AACA,AIVE,MAAI,OAAO,aAAE,MAAT,KAAoB,WAAxB,EAAqC;AJWvC,AIVI;AJWJ,AIVI,iBAAE,gBAAF,CACE,kBADF,EAEE,wCAAoB,IAApB,CAAyB,IAAzB,EAA+B,sCAA/B,CAFF;AJWJ,AIPG,GA7CqC,CA8CtC;AJOF;;AINE,oBAAQ,kBAAR,EAA4B,+CAA5B,EA/CsC,CAgDtC;;AACA,oBAAQ,MJKA,cILR,EAA8B,mDAA9B,EAjDsC,CAkDtC;AJKA,WAAK,YAAL,GADQ,CAER;AILA,MAAI,iBAAM,cAAG,OAAT,IAAoB,OAAO,cAAG,OAAH,CAAW,QAAlB,KAA+B,UAAvD,EAAmE;AJMnE,AILE,WJKG,OILA,IJKL,GAHQ,AIFN,CJMF,AINa,QAAX,GAAsB,IAAtB,CAA2B,sCAA3B;AACD;AJMD,AILD,WJKM,YAAL;AACD;;;;;;eAEY","file":"performance.09b13aae.js","sourceRoot":"../examples","sourcesContent":["export interface IYidengDataConsumption {\n  beacon: number;\n  css: number;\n  fetch: number;\n  img: number;\n  other: number;\n  script: number;\n  total: number;\n  xmlhttprequest: number;\n}\nexport interface IYidengNavigationTiming {\n  fetchTime?: number;\n  workerTime?: number;\n  totalTime?: number;\n  downloadTime?: number;\n  timeToFirstByte?: number;\n  headerSize?: number;\n  dnsLookupTime?: number;\n  tcpTime?: number;\n  whiteTime?: number;\n  domTime?: number;\n  loadTime?: number;\n  parseDomTime?: number;\n}\nexport type EffectiveConnectionType =\n  | '2g'\n  | '3g'\n  | '4g'\n  | '5g'\n  | 'slow-2g'\n  | 'lte';\nexport interface IYidengNetworkInformation {\n  downlink?: number;\n  effectiveType?: EffectiveConnectionType;\n  onchange?: () => void;\n  rtt?: number;\n  saveData?: boolean;\n}\nexport type IYidengData =\n  | number\n  | IYidengNavigationTiming\n  | IYidengNetworkInformation;\n\nexport interface INavigatorInfo {\n  deviceMemory?: number;\n  hardwareConcurrency?: number;\n  isLowEndDevice?: boolean;\n  isLowEndExperience?: boolean;\n  serviceWorkerStatus?: 'controlled' | 'supported' | 'unsupported';\n}\nexport type IVitalsScore = 'good' | 'needsImprovement' | 'poor' | null;\n\nexport interface IAnalyticsTrackerOptions {\n  metricName: string;\n  data: IYidengData;\n  eventProperties: object;\n  navigatorInformation: INavigatorInfo;\n  vitalsScore: IVitalsScore;\n}\nexport interface IYidengOptions {\n  // Metrics\n  captureError?: boolean;\n  resourceTiming?: boolean;\n  elementTiming?: boolean;\n  // Analytics\n  analyticsTracker?: (options: IAnalyticsTrackerOptions) => void;\n  // Logging\n  maxMeasureTime?: number;\n  logUrl?: string;\n}\nexport interface IReportData {\n  sendToAnalytics(level: AskPriority, body: string): void;\n}\n/**\n * @param isResourceTiming - 是否开启资源数据\n * @param isElementTiming - 是否开启性能数据\n * @param analyticsTracker - 最大请求时间\n * @param analyticsTracker - void方法参数IAnalyticsTrackerOptions\n * @param maxTime - 自定义分析工具\n * @interface 系统配置接口\n * @public\n */\nexport interface IYidengConfig {\n  reportData: IReportData;\n  isResourceTiming: boolean;\n  isElementTiming: boolean;\n  analyticsTracker?: (options: IAnalyticsTrackerOptions) => void;\n  maxTime: number;\n}\n\nexport interface IPerfObservers {\n  [measureName: string]: any;\n}\n//性能指标参数\nexport type IPerformanceObserverType =\n  | 'first-input'\n  | 'largest-contentful-paint'\n  | 'layout-shift'\n  | 'longtask'\n  | 'measure'\n  | 'navigation'\n  | 'paint'\n  | 'element'\n  | 'resource';\n//性能指标具体请求类型\nexport type IPerformanceEntryInitiatorType =\n  | 'beacon'\n  | 'css'\n  | 'fetch'\n  | 'img'\n  | 'other'\n  | 'script'\n  | 'xmlhttprequest';\nexport declare interface IPerformanceEntry {\n  decodedBodySize?: number;\n  duration: number;\n  entryType: IPerformanceObserverType;\n  initiatorType?: IPerformanceEntryInitiatorType;\n  loadTime: number;\n  name: string;\n  renderTime: number;\n  startTime: number;\n  hadRecentInput?: boolean;\n  value?: number;\n  identifier?: string;\n}\n//度量指标数据\nexport interface IMetricMap {\n  [measureName: string]: boolean;\n}\n// https://wicg.github.io/event-timing/#sec-performance-event-timing\nexport interface PerformanceEventTiming extends PerformanceEntry {\n  processingStart: DOMHighResTimeStamp;\n  target?: Node;\n}\n//请求响应优先级\nexport enum AskPriority {\n  URGENT = 1,\n  IDLE = 2,\n}\n","interface Navigator {\n  estimate: any;\n  storage: any;\n  deviceMemory?: number;\n  hardwareConcurrency?: number;\n  connection?: string;\n  effectiveType?: string;\n  serviceWorker?: {\n    controller?: string;\n  };\n  sendBeacon?: any;\n}\nexport const W = window;\nexport const C = W.console;\nexport const D = document;\nexport const WN = (W.navigator as unknown) as Navigator;\nexport const WP = W.performance;\n\n//内存\nexport const getDM = () => WN.deviceMemory ?? 0;\n//cpu核数\nexport const getHC = () => WN.hardwareConcurrency ?? 0;\n","import { AskPriority, IReportData } from '../typings/types';\nimport { W, WN } from './constants';\n\n//上报工具\ntype TrackerOptions = {\n  logUrl: string;\n};\nclass ReportData implements IReportData {\n  private logUrl: string;\n  constructor(options: TrackerOptions) {\n    // console.log('⏰', options);\n    const { logUrl } = options;\n    if (logUrl) {\n      this.logUrl = logUrl;\n    } else {\n      throw new Error('请传递要记录数据的路由~');\n    }\n  }\n  public sendToAnalytics(level: AskPriority, body: string, uri?: string) {\n    let logurl = this.logUrl;\n    //临时更换其他url\n    if (uri) {\n      logurl = uri;\n    }\n    // console.log('路由', logurl);\n    if (level == AskPriority.URGENT) {\n      if (!!W.fetch) {\n        fetch(logurl, { body, method: 'POST', keepalive: true });\n      } else {\n        let xhr: XMLHttpRequest | null = new XMLHttpRequest();\n        xhr.open('post', logurl, true);\n        // 设置请求头\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(body); // 发送参数\n        xhr.onload = function (e) {\n          //   if (this.status == 200 || this.status == 304) {\n          //     alert(this.responseText);\n          //   }\n          //及时清理以防多次创建\n          xhr = null;\n        };\n      }\n    } else if (level == AskPriority.IDLE) {\n      if (!!WN.sendBeacon) {\n        navigator.sendBeacon(logurl, body);\n      } else {\n        let img: HTMLImageElement | null = new Image();\n        img.src = `${logurl}?body=${body}`;\n        img.onload = function () {\n          //统计完成收回创建的元素防止内存泄露\n          img = null;\n        };\n      }\n    }\n  }\n}\nexport default ReportData;\n","import ReportData from '../data/ReportData';\nimport { IYidengConfig, IReportData } from '../typings/types';\n\nexport const config: IYidengConfig = {\n  // Metrics\n  reportData: new ReportData({ logUrl: 'hole' }),\n  isResourceTiming: false,\n  isElementTiming: false,\n  // Logging\n  maxTime: 15000,\n};\n","import { WN } from '../data/constants';\nimport {\n  EffectiveConnectionType,\n  IYidengNetworkInformation,\n} from '../typings/types';\n\nexport let et: EffectiveConnectionType = '4g';\nexport let sd = false;\n\nexport const getNetworkInformation = (): IYidengNetworkInformation => {\n  if ('connection' in WN) {\n    const dataConnection = (WN as any).connection;\n    if (typeof dataConnection !== 'object') {\n      return {};\n    }\n    et = dataConnection.effectiveType;\n    sd = !!dataConnection.saveData;\n    return {\n      downlink: dataConnection.downlink,\n      effectiveType: dataConnection.effectiveType,\n      rtt: dataConnection.rtt,\n      saveData: !!dataConnection.saveData,\n    };\n  } else {\n    //todo 这里我们使用多普勒测速法或者直接用图片探测法\n  }\n  return {};\n};\n","import { getDM, getHC } from '../data/constants';\nimport { EffectiveConnectionType } from '../typings/types';\n\nexport const getIsLowEndDevice = (): boolean => {\n  // If number of logical processors available to run threads <= 4\n  if (getHC() && getHC() <= 4) {\n    return true;\n  }\n  // If the approximate amount of RAM client device has <= 4\n  if (getDM() && getDM() <= 4) {\n    return true;\n  }\n  return false;\n};\n\nexport const getIsLowEndExperience = (\n  et: EffectiveConnectionType,\n  sd: boolean\n): boolean => {\n  // If the effective type of the connection meaning\n  // one of 'slow-2g', '2g', '3g', or '4g' is !== 4g\n  switch (et) {\n    case 'slow-2g':\n      return true;\n      break;\n    case '2g':\n      return true;\n      break;\n    case '3g':\n      return true;\n      break;\n    default:\n      // Data Saver preference\n      return getIsLowEndDevice() || sd;\n  }\n};\n","import { getDM, getHC, WN } from '../data/constants';\nimport { et, sd } from './getNetworkInformation';\nimport { getIsLowEndDevice, getIsLowEndExperience } from './isLowEnd';\nimport { INavigatorInfo } from '../typings/types';\n\n/**\n * 如下信息来源于 window.navigator:\n * 1. Device Memory\n * 2. Hardware Concurency\n * 3. Status of the service worker:\n *     - controlled: a service worker is controlling the page\n *     - supported: the browser supports service worker\n *     - unsupported: the user's browser does not support service worker\n */\nexport const getNavigatorInfo = function (): INavigatorInfo {\n  if (WN) {\n    return {\n      deviceMemory: getDM() || 0,\n      hardwareConcurrency: getHC() || 0,\n      serviceWorkerStatus:\n        'serviceWorker' in WN\n          ? WN.serviceWorker!.controller\n            ? 'controlled'\n            : 'supported'\n          : 'unsupported',\n      isLowEndDevice: getIsLowEndDevice(),\n      isLowEndExperience: getIsLowEndExperience(et, sd),\n    };\n  }\n  return {};\n};\n","import { D } from '../data/constants';\n\nexport const visibility = {\n  isHidden: false,\n};\n\n/**\n * From visibilitychange listener it saves only when\n * the page gets hidden, because it's important to not\n * use the wrong \"hidden\" value when send timing or logging.\n */\nexport const didVisibilityChange = function (cb: Function) {\n  if (D.hidden) {\n    cb();\n    visibility.isHidden = D.hidden;\n  }\n};\n","import { W } from '../data/constants';\n\nexport const roundByTwo = (num: number) => {\n  return parseFloat(num.toFixed(2));\n};\n\nexport const convertToKB = (bytes: number): number | null => {\n  if (typeof bytes !== 'number') {\n    return null;\n  }\n  return roundByTwo(bytes / Math.pow(1024, 2));\n};\n\n/**\n * PushTask to requestIdleCallback\n * 高效利用每一帧进行数据的收集\n */\nexport const pushTask = (cb: any): void => {\n  if ('requestIdleCallback' in W) {\n    (W as any).requestIdleCallback(cb, { timeout: 3000 });\n  } else {\n    cb();\n  }\n};\n","import { IYidengData, IVitalsScore } from '../typings/types';\n\n//https://web.dev/vitals/\nconst fcpScore = [1000, 2500];\nconst lcpScore = [2500, 4000];\nconst fidcore = [100, 300];\nconst clsScore = [0.1, 0.25];\nconst tbtScore = [300, 600];\n\nexport const webVitalsScore: Record<string, number[]> = {\n  fp: fcpScore,\n  fcp: fcpScore,\n  lcp: lcpScore,\n  lcpFinal: lcpScore,\n  fid: fidcore,\n  fidVitals: fidcore,\n  cls: clsScore,\n  clsFinal: clsScore,\n  tbt: tbtScore,\n  tbt5S: tbtScore,\n  tbt10S: tbtScore,\n  tbtFinal: tbtScore,\n};\n\nexport const getVitalsScore = (\n  measureName: string,\n  value: IYidengData\n): IVitalsScore => {\n  if (!webVitalsScore[measureName]) {\n    return null;\n  }\n  if (value <= webVitalsScore[measureName][0]) {\n    return 'good';\n  }\n  return value <= webVitalsScore[measureName][1] ? 'needsImprovement' : 'poor';\n};\n","import { config } from '../config';\nimport { getNavigatorInfo } from '../helpers/getNavigatorInfo';\nimport { visibility } from '../helpers/onVisibilityChange';\nimport { pushTask } from '../helpers/utils';\nimport { getVitalsScore } from '../helpers/vitalsScore';\n\n/**\n * Sends the User timing measure to analyticsTracker\n */\nexport const reportPerf = function (\n  measureName: string,\n  data: any,\n  customProperties?: object\n): void {\n  pushTask(() => {\n    //console.log('[ measureName ]', measureName);\n    // 当页面被隐藏的时候不报告具体数据\n    if (\n      (visibility.isHidden && measureName.indexOf('Final') < 0) ||\n      !config.analyticsTracker\n    ) {\n      return;\n    }\n    // Send metric to custom Analytics service\n    config.analyticsTracker({\n      metricName: measureName,\n      data,\n      eventProperties: customProperties || {},\n      navigatorInformation: getNavigatorInfo(),\n      vitalsScore: getVitalsScore(measureName, data),\n    });\n  });\n};\n","import { config } from '../config';\nimport { reportPerf } from '../data/reportPerf';\nimport { roundByTwo } from '../helpers/utils';\n\nexport const logData = (\n  measureName: string,\n  metric: any,\n  customProperties?: object\n): void => {\n  Object.keys(metric).forEach((key) => {\n    if (typeof metric[key] === 'number') {\n      metric[key] = roundByTwo(metric[key]);\n    }\n  });\n  // Sends the metric to an external tracking service\n  reportPerf(measureName, metric, customProperties);\n};\n\n/**\n * Dispatches the metric duration into internal logs\n * and the external time tracking service.\n */\nexport const logMetric = (\n  duration: number,\n  measureName: string,\n  customProperties?: object\n): void => {\n  const duration2Decimal = roundByTwo(duration);\n  if (duration2Decimal <= config.maxTime && duration2Decimal >= 0) {\n    // 从内部或者外部的报告工具报告指标数据\n    reportPerf(measureName, duration2Decimal, customProperties);\n  }\n};\n","import { W, WP } from '../data/constants';\n\n/**\n * True if the browser supports the Navigation Timing API,\n * User Timing API and the PerformanceObserver Interface.\n * In Safari, the User Timing API (performance.mark()) is not available,\n * so the DevTools timeline will not be annotated with marks.\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n * Support: developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType\n */\nexport const isPerformanceSupported = (): boolean => {\n  return WP && !!WP.getEntriesByType && !!WP.now && !!WP.mark;\n};\n","import { WP } from '../data/constants';\nimport { isPerformanceSupported } from '../helpers/isSupported';\nimport { IYidengNavigationTiming } from '../typings/types';\n\n/**\n * Navigation Timing API provides performance metrics for HTML documents.\n * w3c.github.io/navigation-timing/\n * developers.google.com/web/fundamentals/performance/navigation-and-resource-timing\n */\nexport const getNavigationTiming = (): IYidengNavigationTiming => {\n  if (!isPerformanceSupported()) {\n    return {};\n  }\n  // There is an open issue to type correctly getEntriesByType\n  // github.com/microsoft/TypeScript/issues/33866\n  // 这里直接的物理赋值performance.timing 已被弃用\n  const n = WP.getEntriesByType('navigation')[0] as any;\n  // In Safari version 11.2 Navigation Timing isn't supported yet\n  if (!n) {\n    return {};\n  }\n  const responseStart = n.responseStart;\n  const responseEnd = n.responseEnd;\n  // We cache the navigation time for future times\n  return {\n    // fetchStart marks when the browser starts to fetch a resource\n    // responseEnd is when the last byte of the response arrives\n    fetchTime: responseEnd - n.fetchStart,\n    // Service worker time plus response time\n    workerTime: n.workerStart > 0 ? responseEnd - n.workerStart : 0,\n    // Request plus response time (network only)\n    totalTime: responseEnd - n.requestStart,\n    // Response time only (download)\n    downloadTime: responseEnd - responseStart,\n    // Time to First Byte (TTFB)\n    timeToFirstByte: responseStart - n.requestStart,\n    // HTTP header size\n    headerSize: n.transferSize - n.encodedBodySize || 0,\n    //DNS解析时间\n    dnsLookupTime: n.domainLookupEnd - n.domainLookupStart,\n    //TCP建立时间\n    tcpTime: n.connectEnd - n.connectStart || 0,\n    // 白屏时间\n    whiteTime: n.responseStart - n.navigationStart || 0,\n    //dom渲染完成时间\n    domTime: n.domContentLoadedEventEnd - n.navigationStart || 0,\n    //页面onload时间\n    loadTime: n.loadEventEnd - n.navigationStart || 0,\n    //页面解析dom耗时\n    parseDomTime: n.domComplete - n.domInteractive || 0,\n  };\n};\n","import { IMetricMap, IYidengDataConsumption } from '../typings/types';\n\nexport const metrics: IMetricMap = {};\nexport const cls = {\n  value: 0,\n};\nexport const fcp = {\n  value: 0,\n};\nexport const lcp = {\n  value: 0,\n};\nexport const fcpEntryName = 'first-contentful-paint';\nexport const rt: { value: IYidengDataConsumption } = {\n  value: {\n    beacon: 0,\n    css: 0,\n    fetch: 0,\n    img: 0,\n    other: 0,\n    script: 0,\n    total: 0,\n    xmlhttprequest: 0,\n  },\n};\n//主线程总阻塞时间\nexport const tbt = {\n  value: 0,\n};\n","import { cls } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\n/**\n * Detects new layout shift occurrences and updates the\n * `cumulativeLayoutShiftScore` variable.\n */\nexport const initLayoutShift = (performanceEntries: IPerformanceEntry[]) => {\n  const lastEntry = performanceEntries.pop();\n  // Only count layout shifts without recent user input.\n  if (lastEntry && !lastEntry.hadRecentInput && lastEntry.value) {\n    cls.value += lastEntry.value;\n  }\n};\n","import { IPerfObservers } from '../typings/types';\n/**\n * @remarks 核心性能数据指标对象\n * @public\n */\nexport const perfObservers: IPerfObservers = {};\n","import { C } from '../data/constants';\nimport { perfObservers } from './observeInstances';\nimport { IPerformanceObserverType } from '../typings/types';\n\n/**\n * PerformanceObserver 异步订阅封装\n */\nexport const po = (\n  eventType: IPerformanceObserverType,\n  cb: (performanceEntries: any[]) => void\n): PerformanceObserver | null => {\n  try {\n    const perfObserver = new PerformanceObserver((entryList) => {\n      cb(entryList.getEntries());\n    });\n    // 订阅时间或者开始计时 buffered不立即执行在内存中留下PerformanceObserver实例\n    perfObserver.observe({ type: eventType, buffered: true });\n    return perfObserver;\n  } catch (e) {\n    C.warn('Yideng.js:', e);\n  }\n  return null;\n};\n//断开测试通道\nexport const poDisconnect = (observer: any) => {\n  if (perfObservers[observer]) {\n    perfObservers[observer].disconnect();\n  }\n  delete perfObservers[observer];\n};\n","import { logData, logMetric } from '../data/log';\nimport { cls, lcp, rt, tbt } from '../data/metrics';\nimport { perfObservers } from './observeInstances';\nimport { poDisconnect } from './performanceObserver';\nimport { PerformanceEventTiming } from '../typings/types';\n\nexport const initFirstInputDelay = (\n  performanceEntries: PerformanceEventTiming[]\n) => {\n  //取最后的一位即为我们希望所获取的时间点\n  const lastEntry = performanceEntries.pop();\n  if (lastEntry) {\n    // Core Web Vitals FID logic\n    // 测量输入事件的延迟操作\n    logMetric(lastEntry.processingStart - lastEntry.startTime, 'fidVitals', {\n      performanceEntry: lastEntry,\n    });\n    // 传统的FID逻辑\n    // Measure the duration of processing the first input event\n    logMetric(lastEntry.duration, 'fid', {\n      performanceEntry: lastEntry,\n    });\n  }\n  // 销毁对FID的注册回调 避免过多的观察者造成内存泄露\n  poDisconnect(1);\n  //初始化lcp\n  logMetric(lcp.value, 'lcp');\n  if (perfObservers[3] && typeof perfObservers[3].takeRecords === 'function') {\n    perfObservers[3].takeRecords();\n  }\n  logMetric(cls.value, 'cls');\n  logMetric(tbt.value, 'tbt');\n  // TBT with 5 second delay after FID\n  setTimeout(() => {\n    logMetric(tbt.value, `tbt5S`);\n  }, 5000);\n  // TBT with 10 second delay after FID\n  setTimeout(() => {\n    logMetric(tbt.value, `tbt10S`);\n    //FID被激活以后10S的整体数据消耗\n    logData('dataConsumption', rt.value);\n  }, 10000);\n};\n","import { fcp, tbt } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\nexport const initTotalBlockingTime = (\n  performanceEntries: IPerformanceEntry[]\n): void => {\n  performanceEntries.forEach((entry) => {\n    //从fcp -> tti获取长耗时任务（self表示耗时长任务来自于渲染帧）\n    // console.log('🍌', entry);\n    if (entry.name !== 'self' || entry.startTime < fcp.value) {\n      return;\n    }\n    // console.log('🍌2', entry);\n    //https://developer.mozilla.org/zh-CN/docs/Web/API/Long_Tasks_API\n    //长耗时任务意味着执行时间超过50ms的\n    const blockingTime = entry.duration - 50;\n    if (blockingTime > 0) {\n      tbt.value += blockingTime;\n    }\n  });\n};\n","import { IPerformanceEntry } from '../typings/types';\nimport { fcp, fcpEntryName, lcp } from '../data/metrics';\nimport { po, poDisconnect } from './performanceObserver';\nimport { perfObservers } from './observeInstances';\nimport { initTotalBlockingTime } from './totalBlockingTime';\nimport { logMetric } from '../data/log';\nexport const initFirstPaint = (performanceEntries: IPerformanceEntry[]) => {\n  performanceEntries.forEach((entry) => {\n    if (entry.name === 'first-paint') {\n      logMetric(entry.startTime, 'fp');\n    } else if (entry.name === fcpEntryName) {\n      fcp.value = entry.startTime;\n      logMetric(fcp.value, 'fcp');\n      perfObservers[4] = po('longtask', initTotalBlockingTime);\n      poDisconnect(0);\n    }\n  });\n};\nexport const initLargestContentfulPaint = (\n  performanceEntries: IPerformanceEntry[]\n) => {\n  const lastEntry = performanceEntries.pop();\n  if (lastEntry) {\n    lcp.value = lastEntry.renderTime || lastEntry.loadTime;\n  }\n};\nexport const initElementTiming = (performanceEntries: IPerformanceEntry[]) => {\n  performanceEntries.forEach((entry) => {\n    if (entry.identifier) {\n      logMetric(entry.startTime, entry.identifier);\n    }\n  });\n};\n","import { config } from '../config';\nimport { logData } from '../data/log';\nimport { rt } from '../data/metrics';\nimport { IPerformanceEntry } from '../typings/types';\n\nexport const initResourceTiming = (performanceEntries: IPerformanceEntry[]) => {\n  //console.log('🐶', performanceEntries);\n  performanceEntries.forEach((entry) => {\n    //console.log('🐶', 1);\n    if (config.isResourceTiming) {\n      logData('resourceTiming', entry);\n    }\n    if (entry.decodedBodySize && entry.initiatorType) {\n      const bodySize = entry.decodedBodySize / 1000;\n      rt.value[entry.initiatorType] += bodySize;\n      rt.value.total += bodySize;\n    }\n  });\n};\n","import { config } from '../config';\nimport { logMetric } from '../data/log';\nimport { cls, lcp, tbt } from '../data/metrics';\nimport { initLayoutShift } from './cumulativeLayoutShift';\nimport { initFirstInputDelay } from './firstInput';\nimport { perfObservers } from './observeInstances';\nimport {\n  initElementTiming,\n  initFirstPaint,\n  initLargestContentfulPaint,\n} from './paint';\nimport { po, poDisconnect } from './performanceObserver';\nimport { initResourceTiming } from './resourceTiming';\nexport const initPerformanceObserver = (): void => {\n  console.log('⏰ 性能收集开始', Math.random());\n  perfObservers[0] = po('paint', initFirstPaint);\n  perfObservers[1] = po('first-input', initFirstInputDelay);\n  perfObservers[2] = po('largest-contentful-paint', initLargestContentfulPaint);\n  //收集页面全部资源性能数据\n  if (config.isResourceTiming) {\n    console.log('📚 收集页面性能数据');\n    po('resource', initResourceTiming);\n  }\n  perfObservers[3] = po('layout-shift', initLayoutShift);\n  if (config.isElementTiming) {\n    po('element', initElementTiming);\n  }\n};\n\nexport const disconnectPerfObserversHidden = (): void => {\n  if (perfObservers[2]) {\n    logMetric(lcp.value, `lcpFinal`);\n    poDisconnect(2);\n  }\n  if (perfObservers[3]) {\n    if (typeof perfObservers[3].takeRecords === 'function') {\n      perfObservers[3].takeRecords();\n    }\n    logMetric(cls.value, `clsFinal`);\n    poDisconnect(3);\n  }\n  if (perfObservers[4]) {\n    logMetric(tbt.value, `tbtFinal`);\n    poDisconnect(4);\n  }\n};\n","import { W, WP } from '../data/constants';\n\n/**\n * True if the browser supports the Navigation Timing API,\n * User Timing API and the PerformanceObserver Interface.\n * In Safari, the User Timing API (performance.mark()) is not available,\n * so the DevTools timeline will not be annotated with marks.\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/mark\n * Support: developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver\n * Support: developer.mozilla.org/en-US/docs/Web/API/Performance/getEntriesByType\n */\nexport const isPerformanceSupported = (): boolean => {\n  return WP && !!WP.getEntriesByType && !!WP.now && !!WP.mark;\n};\n","import { config } from '../config';\nimport { W } from '../data/constants';\n//rrweb引入到了这里\nimport { AskPriority } from '../typings/types';\ntype ErrorInfo = {};\nclass ErrorTrace {\n  private errordefo: ErrorInfo;\n  constructor() {\n    this.errordefo = {};\n  }\n  //全局捕获同步+异步错误\n  private globalError() {\n    console.log('上报sdk');\n    console.log('[ ❌全局捕获错误 ]');\n    W.onerror = (\n      eventOrMessage: Event | string,\n      scriptURI?: string,\n      lineno?: number,\n      colno?: number,\n      error?: Error\n    ): boolean => {\n      console.log('[ 我知道错误了 ]', eventOrMessage);\n      const errorInfo = JSON.stringify({\n        scriptURI,\n        lineno,\n        colno,\n        error,\n      });\n      //通过错误信息还原sourcemap源文件地址\n      console.log(errorInfo);\n      config.reportData.sendToAnalytics(AskPriority.IDLE, errorInfo);\n      return true;\n    };\n  }\n  //资源挂载失败 如404png\n  private networkError() {\n    W.addEventListener(\n      'error',\n      function (e: ErrorEvent) {\n        if (e.target !== W) {\n          console.log('🖼网络错误', e.target);\n        }\n      },\n      true\n    );\n  }\n  //异步Promise错误\n  private promiseError() {\n    W.addEventListener('unhandledrejection', function (e) {\n      e.preventDefault();\n      console.log('我知道 promise 的错误了', e.reason);\n      return true;\n    });\n  }\n  private iframeError() {\n    const frames = W.frames;\n    for (let i = 0; i < frames.length; i++) {\n      frames[i].addEventListener(\n        'error',\n        (e) => {\n          console.log('addEventListener');\n          console.log(e);\n        },\n        true\n      );\n\n      frames[i].addEventListener(\n        'unhandledrejection',\n        function (e) {\n          console.log('unhandledrejection');\n        },\n        true\n      );\n    }\n  }\n  // private consoleReflect() {\n  //   const console_error = W.console.error;\n  //   W.console.error = function () {\n  //     config.reportData.sendToAnalytics(AskPriority.IDLE, errorInfo);\n  //     console_error.apply(window, arguments);\n  //   };\n  // }\n  public run() {\n    this.networkError();\n    //触发全体数据监听错误\n    this.globalError();\n    //触发promise的错误\n    this.promiseError();\n  }\n}\nexport default ErrorTrace;\n","import { IAnalyticsTrackerOptions } from '../typings/types';\nconst analyticsTracker = (options: IAnalyticsTrackerOptions): void => {\n  //   console.log(Math.random());\n  //   console.log('-------');\n  const {\n    metricName,\n    eventProperties,\n    data,\n    navigatorInformation,\n    vitalsScore,\n  } = options;\n  console.log(options);\n};\nexport default analyticsTracker;\n","import { AskPriority, IReportData } from '../typings/types';\nimport { W, WN } from './constants';\n\n//上报工具\ntype TrackerOptions = {\n  logUrl: string;\n};\nclass ReportData implements IReportData {\n  private logUrl: string;\n  constructor(options: TrackerOptions) {\n    // console.log('⏰', options);\n    const { logUrl } = options;\n    if (logUrl) {\n      this.logUrl = logUrl;\n    } else {\n      throw new Error('请传递要记录数据的路由~');\n    }\n  }\n  public sendToAnalytics(level: AskPriority, body: string, uri?: string) {\n    let logurl = this.logUrl;\n    //临时更换其他url\n    if (uri) {\n      logurl = uri;\n    }\n    // console.log('路由', logurl);\n    if (level == AskPriority.URGENT) {\n      if (!!W.fetch) {\n        fetch(logurl, { body, method: 'POST', keepalive: true });\n      } else {\n        let xhr: XMLHttpRequest | null = new XMLHttpRequest();\n        xhr.open('post', logurl, true);\n        // 设置请求头\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(body); // 发送参数\n        xhr.onload = function (e) {\n          //   if (this.status == 200 || this.status == 304) {\n          //     alert(this.responseText);\n          //   }\n          //及时清理以防多次创建\n          xhr = null;\n        };\n      }\n    } else if (level == AskPriority.IDLE) {\n      if (!!WN.sendBeacon) {\n        navigator.sendBeacon(logurl, body);\n      } else {\n        let img: HTMLImageElement | null = new Image();\n        img.src = `${logurl}?body=${body}`;\n        img.onload = function () {\n          //统计完成收回创建的元素防止内存泄露\n          img = null;\n        };\n      }\n    }\n  }\n}\nexport default ReportData;\n","import { logData } from './log';\nimport { convertToKB } from '../helpers/utils';\n\n/**\n * The estimate() method of the StorageManager interface asks the Storage Manager\n * for how much storage the app takes up (usage),\n * and how much space is available (quota).\n */\nexport const reportStorageEstimate = (storageInfo: StorageEstimate) => {\n  const estimateUsageDetails =\n    'usageDetails' in storageInfo ? (storageInfo as any).usageDetails : {};\n  logData('storageEstimate', {\n    quota: convertToKB((storageInfo as any).quota),\n    usage: convertToKB((storageInfo as any).usage),\n    caches: convertToKB(estimateUsageDetails.caches),\n    indexedDB: convertToKB(estimateUsageDetails.indexedDB),\n    serviceWorker: convertToKB(estimateUsageDetails.serviceWorkerRegistrations),\n  });\n};\n","/**\n * 一款免费的开源性能监控SDK\n *\n * @remarks\n * 目前能够完成监控的指标包含FCP等\n *\n * @packageDocumentation\n */\nimport { config } from './config';\nimport { D, W, WN, WP } from './data/constants';\nimport { logData } from './data/log';\nimport { getNavigationTiming } from './performance/getNavigationTiming';\nimport {\n  disconnectPerfObserversHidden,\n  initPerformanceObserver,\n} from './performance/observe';\nimport { isPerformanceSupported } from './tools/isSupported';\nimport { IReportData, IYidengOptions } from './typings/types';\nimport ErrorTrace from './error';\nimport analyticsTracker from './data/analyticsTracker';\nimport ReportData from './data/reportData';\nimport { didVisibilityChange } from './helpers/onVisibilityChange';\nimport { getNetworkInformation } from './helpers/getNetworkInformation';\nimport { reportStorageEstimate } from './data/storageEstimate';\n\nexport default class Yideng {\n  private v = '1.0.0';\n  private reportData: IReportData;\n  constructor(options: IYidengOptions = {}) {\n    // 扩展基础配置\n    const logUrl = options.logUrl;\n    if (!logUrl) {\n      throw new Error(`京程一灯系统监控平台${this.v}提示未传递logUrl`);\n    }\n    //向后台输送数据\n    const insReportData = new ReportData({\n      logUrl,\n    });\n    config.reportData = insReportData;\n    //对外暴露上传接口\n    this.reportData = insReportData;\n    //集合数据汇总\n    const _analyticsTracker = options.analyticsTracker;\n    if (_analyticsTracker) {\n      config.analyticsTracker = _analyticsTracker;\n    } else {\n      config.analyticsTracker = analyticsTracker;\n    }\n    config.isResourceTiming = !!options.resourceTiming;\n    config.isElementTiming = !!options.elementTiming;\n    config.maxTime = options.maxMeasureTime || config.maxTime;\n\n    if (options.captureError) {\n      //开启错误跟踪\n      const errorTtace = new ErrorTrace();\n      errorTtace.run();\n    }\n\n    //如果浏览器不支持性能指标只能放弃\n    if (!isPerformanceSupported()) {\n      return;\n    }\n    //浏览器支持的起FRP这样的Observer统计性能\n    if ('PerformanceObserver' in W) {\n      initPerformanceObserver();\n    }\n    //初始化\n    if (typeof D.hidden !== 'undefined') {\n      // Opera 12.10 and Firefox 18 and later support\n      D.addEventListener(\n        'visibilitychange',\n        didVisibilityChange.bind(this, disconnectPerfObserversHidden)\n      );\n    }\n    //记录系统DNS请求+白屏时间等\n    logData('navigationTiming', getNavigationTiming());\n    //记录用户的网速 H5+多普勒测速\n    logData('networkInformation', getNetworkInformation());\n    //管理离线缓存数据\n    if (WN && WN.storage && typeof WN.storage.estimate === 'function') {\n      WN.storage.estimate().then(reportStorageEstimate);\n    }\n  }\n}\n","import Yideng from '../../src/yideng';\n\nconst yideng = new Yideng({\n  elementTiming: true,\n  logUrl: 'http://123.com/test',\n});\n\nconsole.log('🐻', yideng);\n// 模拟一个长任务\nconst start = Date.now();\nwhile (Date.now() - start < 1000) {}\n"]}